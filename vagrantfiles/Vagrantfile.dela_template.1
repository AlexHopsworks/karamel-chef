Vagrant.configure("2") do |config|

  config.ssh.insert_key = false
  config.vm.box = "bento/ubuntu-16.04"
  config.vm.box_version = "2.3.5"
  config.vm.box_check_update = false
  config.vm.hostname = 'hopsworks0'
  config.vm.boot_timeout =3600
  
  config.vm.network :forwarded_port, guest: 22, host: 21101, id: "ssh"
  # MySQL Server
  config.vm.network(:forwarded_port, {:guest=>3306, :host=>22101})
  # karamel http
  config.vm.network(:forwarded_port, {:guest=>9090, :host=>23101})     
  # Hopsworks http
  config.vm.network(:forwarded_port, {:guest=>8080, :host=>24101})     
  # Glassfish debug port
  config.vm.network(:forwarded_port, {:guest=>9009, :host=>25101})
  # Glassfish admin UI
  config.vm.network(:forwarded_port, {:guest=>4848, :host=>26101})         
  # Yarn RM 
  config.vm.network(:forwarded_port, {:guest=>8088, :host=>27101})
  # Kibana
  config.vm.network(:forwarded_port, {:guest=>5601, :host=>28101})
  # Grafana Webserver
  config.vm.network(:forwarded_port, {:guest=>3000, :host=>29101})
  # Nodemanager
  config.vm.network(:forwarded_port, {:guest=>8083, :host=>30101})
  # Influx DB admin (because of clash with nodemanager)
  config.vm.network(:forwarded_port, {:guest=>8084, :host=>31101})
  # Influx DB REST API
  config.vm.network(:forwarded_port, {:guest=>8086, :host=>32101})
  # Graphite Endpoint
  config.vm.network(:forwarded_port, {:guest=>2003, :host=>33101})
  # Jupyter
  config.vm.network(:forwarded_port, {:guest=>8888, :host=>34101})
  # membrane proxy    
  config.vm.network(:forwarded_port, {:guest=>11112, :host=>35101})
  # Dela udp ports
  config.vm.network(:forwarded_port, {:guest=>42101, :host=>42101, :protocol=>"udp"})
  config.vm.network(:forwarded_port, {:guest=>43101, :host=>43101, :protocol=>"udp"})
  config.vm.network(:forwarded_port, {:guest=>44101, :host=>44101, :protocol=>"udp"})
  # Dela http port
  config.vm.network(:forwarded_port, {:guest=>45101, :host=>45101})
  # Hops Site 1
  config.vm.network(:forwarded_port, {:guest=>50048, :host=>51101})
  # Hops Site 2
  config.vm.network(:forwarded_port, {:guest=>50081, :host=>52101})

  config.vm.provision "file", source: "cluster.yml", destination: "cluster.yml"
  config.vm.provision "file", source: "~/.vagrant.d/insecure_private_key", destination: "~/.ssh/id_rsa"    
  config.vm.provision "shell", inline: "cp /home/vagrant/.ssh/authorized_keys /home/vagrant/.ssh/id_rsa.pub && sudo chown vagrant:vagrant /home/vagrant/.ssh/id_rsa.pub"

  config.vm.provider :virtualbox do |v|
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    v.customize ["modifyvm", :id, "--memory", 15548]
    v.customize ["modifyvm", :id, "--name", "hopsworks0"]      
    v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    v.customize ["modifyvm", :id, "--nictype1", "virtio"]
    v.customize ["modifyvm", :id, "--cpus", "2"]    
  end

  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "cookbooks"
    chef.json = {
      "karamel" => {
        "default" => { 
          "private_ips" => ["10.0.2.15"]
        },
      },
    }
    chef.add_recipe "karamel::install"
    chef.add_recipe "karamel::default"     
    chef.add_recipe "karamel::run"   
  end  
end 